{"ast":null,"code":"import _objectSpread from\"/home/sahana/Documents/ReactJS_Course/App/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/sahana/Documents/ReactJS_Course/App/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext}from'react';import Card from'../Shared/Components/UIElements/Card';import Input from'../Shared/Components/FormElements/Input';import Button from'../Shared/Components/FormElements/Button';import{VALIDATOR_EMAIL,VALIDATOR_MINLENGTH,VALIDATOR_REQUIRE}from'../Shared/Components/Util/validators';import{useForm}from'../Shared/Components/Hooks/form-hook';import{AuthContext}from'../Shared/Components/Context/auth-context';import'./Auth.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Auth=function Auth(){var auth=useContext(AuthContext);var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isLoginMode=_useState2[0],setIsLoginMode=_useState2[1];var _useForm=useForm({email:{value:'',isValid:false},password:{value:'',isValid:false}},false),_useForm2=_slicedToArray(_useForm,3),formState=_useForm2[0],inputHandler=_useForm2[1],setFormData=_useForm2[2];var switchModeHandler=function switchModeHandler(){if(!isLoginMode){setFormData(_objectSpread(_objectSpread({},formState.inputs),{},{name:undefined}),formState.inputs.email.isValid&&formState.inputs.password.isValid);}else{setFormData(_objectSpread(_objectSpread({},formState.inputs),{},{name:{value:'',isValid:false}}),false);}setIsLoginMode(function(prevMode){return!prevMode;});};var authSubmitHandler=function authSubmitHandler(event){event.preventDefault();console.log(formState.inputs);auth.login();};return/*#__PURE__*/_jsxs(Card,{className:\"authentication\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Login Required\"}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:authSubmitHandler,children:[!isLoginMode&&/*#__PURE__*/_jsx(Input,{element:\"input\",id:\"name\",type:\"text\",label:\"Your Name\",validators:[VALIDATOR_REQUIRE()],errorText:\"Please enter a name.\",onInput:inputHandler}),/*#__PURE__*/_jsx(Input,{element:\"input\",id:\"email\",type:\"email\",label:\"E-Mail\",validators:[VALIDATOR_EMAIL()],errorText:\"Please enter a valid email address.\",onInput:inputHandler}),/*#__PURE__*/_jsx(Input,{element:\"input\",id:\"password\",type:\"password\",label:\"Password\",validators:[VALIDATOR_MINLENGTH(5)],errorText:\"Please enter a valid password, at least 5 characters.\",onInput:inputHandler}),/*#__PURE__*/_jsx(Button,{type:\"submit\",disabled:!formState.isValid,children:isLoginMode?'LOGIN':'SIGNUP'})]}),/*#__PURE__*/_jsxs(Button,{inverse:true,onClick:switchModeHandler,children:[\"SWITCH TO \",isLoginMode?'SIGNUP':'LOGIN']})]});};export default Auth;","map":{"version":3,"sources":["/home/sahana/Documents/ReactJS_Course/App/frontend/src/Authentication/Auth.js"],"names":["React","useState","useContext","Card","Input","Button","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","useForm","AuthContext","Auth","auth","isLoginMode","setIsLoginMode","email","value","isValid","password","formState","inputHandler","setFormData","switchModeHandler","inputs","name","undefined","prevMode","authSubmitHandler","event","preventDefault","console","log","login"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\n\nimport Card from '../Shared/Components/UIElements/Card';\nimport Input from '../Shared/Components/FormElements/Input';\nimport Button from '../Shared/Components/FormElements/Button';\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE\n} from '../Shared/Components/Util/validators';\nimport { useForm } from '../Shared/Components/Hooks/form-hook';\nimport { AuthContext } from '../Shared/Components/Context/auth-context';\nimport './Auth.css';\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: '',\n        isValid: false\n      },\n      password: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: '',\n            isValid: false\n          }\n        },\n        false\n      );\n    }\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n    auth.login();\n  };\n\n  return (\n    <Card className=\"authentication\">\n      <h2>Login Required</h2>\n      <hr />\n      <form onSubmit={authSubmitHandler}>\n        {!isLoginMode && (\n          <Input\n            element=\"input\"\n            id=\"name\"\n            type=\"text\"\n            label=\"Your Name\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a name.\"\n            onInput={inputHandler}\n          />\n        )}\n        <Input\n          element=\"input\"\n          id=\"email\"\n          type=\"email\"\n          label=\"E-Mail\"\n          validators={[VALIDATOR_EMAIL()]}\n          errorText=\"Please enter a valid email address.\"\n          onInput={inputHandler}\n        />\n        <Input\n          element=\"input\"\n          id=\"password\"\n          type=\"password\"\n          label=\"Password\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid password, at least 5 characters.\"\n          onInput={inputHandler}\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n        </Button>\n      </form>\n      <Button inverse onClick={switchModeHandler}>\n        SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n      </Button>\n    </Card>\n  );\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}